DEFINE
function DaxLib.SVG.Sparkline.Line =
			(
				width: INT64,
				height: INT64,
				contextTable: ANYREF EXPR,
				xAxis: ANYREF EXPR,
				measureVal: NUMERIC EXPR,
				lineColour: STRING
			) =>
				
				VAR _Data = 
					ADDCOLUMNS(
						KEEPFILTERS(
							FILTER(
								KEEPFILTERS( contextTable ),
								not ISBLANK( measureVal )
							)
						),
						"Value", measureVal
					)

				// IF categories are non-numeric need to do this and use the GroupIndex as the xAxis
				// VAR _All_Categories =
				// 	CALCULATETABLE(
				// 		FILTER(
				// 			KEEPFILTERS( VALUES( SVG[FOMONTH] ) ),
				// 			NOT ISBLANK( [Sum Value] )
				// 		),
				// 		ALLSELECTED()
				// 	)

				// VAR _Sync_Data =
				// 	SUBSTITUTEWITHINDEX(
				// 		_Data
				// 		,"GroupIndex", _All_Categories
				// 		,NAMEOF ( SVG[FOMONTH] ), ASC
				// 	)

				// VAR _Non_Blank_Sync_Data = FILTER( KEEPFILTERS( _Sync_Data ), not ISBLANK( [Value] ) )  

				// Axis calculations
				VAR _XMin =  	CALCULATE( MIN( xAxis ), ALLSELECTED() )
				VAR _XMax =   	CALCULATE( MAX( xAxis ), ALLSELECTED() )
				VAR _RawYMin =  MINX( CALCULATETABLE( contextTable, ALLSELECTED() ), measureVal )
				VAR _YMin =  	IF( _RawYMin > 0, 0, _RawYMin )
				VAR _YMax =   	MAXX( CALCULATETABLE( contextTable, ALLSELECTED() ), measureVal )

				// Points
				VAR _Points = 
					CONCATENATEX(
						_Data,
						IF( 
							NOT ISBLANK( [Value] ), 
							COMBINEVALUES( 
								",", 
								ROUND( DaxLib.SVG.Scale.Normalize( xAxis, _XMin, _XMax, 0, width ), 2 ), 
								ROUND( DaxLib.SVG.Scale.Normalize( [Value] , _YMin, _YMax, height, 0 ), 2 )
							)
						),
						" ",
						NAMEOF( xAxis ),
						ASC
					)

				// Style
				VAR _LineStyle =
					DaxLib.SVG.Attr.Shapes(
						"none",    		// fill
						BLANK(),        // fillOpacity
						BLANK(),        // fillRule
						IF( NOT ISBLANK( lineColour ), lineColour, "#01B8AA" ),    // stroke
						2,              // strokeWidth
						BLANK(),        // strokeOpacity
						BLANK()         // opacity
					)

				VAR _Padding = 0.05

				// Line Element
				VAR _LineElement =
					DaxLib.SVG.Element.Polyline(
						_Points,        // points
						_LineStyle,     // attributes
						BLANK()         // transforms
					)

				// SVG
				VAR _SVG =
					DaxLib.SVG.SVG(
						width,				// width
						height,				// height
						COMBINEVALUES( " ", - width * ( _Padding / 2 ), 0, width * ( 1 + _Padding ), height), // viewbox
						_LineElement,		// contents
						BLANK()				// sortValue
					)

				RETURN

					IF( NOT ISEMPTY( _Data ), _SVG )
	
EVALUATE

ADDCOLUMNS(
	SUMMARIZE( svg, SVG[Category], SVG[Subcategory] ),
	"x", 
	DaxLib.SVG.Sparkline.Line(
		100,                // width
		20,                 // height
		SUMMARIZE( SVG, SVG[Category], SVG[Subcategory], SVG[FOMONTH] ), // contextTable
		SVG[FOMONTH],       // xAxis
		[Sum Value],        // measureVal
		DaxLib.SVG.Colour.Theme(
			MAX( Theme[Theme] ),
			MIN( Variant[Variant] )
		)                   // lineColour
	)
)